version: "3.8"

networks:
    tracktrace_test_network:
        driver: bridge

services:
  core_users:
    container_name: core_users
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-user-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
      - PYTHONUNBUFFERED=1
    ports:
      - 5002:5002
  
  core_import:
    container_name: core_import
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-import-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
      - PYTHONUNBUFFERED=1
    ports:
      - 5003:5003
  
  core_import_cont:
    container_name: core_import_cont
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-import-cont-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
      - PYTHONUNBUFFERED=1
    ports:
      - 5004:5004
  
  core_import_shipment:
    container_name: core_import_shipment
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-import-shipment-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
    ports:
      - 5005:5005

  core_export:
    container_name: core_export
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-export-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
    ports:
      - 5006:5006

  core_export_cont:
    container_name: core_export_cont
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-export-cont-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
    ports:
      - 5007:5007
  
  core_export_shipment:
    container_name: core_export_shipment
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-export-shipment-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
    ports:
      - 5008:5008
  
  core_complex_scraper:
    container_name: core_complex_scraper
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-complex-scraper-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
      - PYTHONUNBUFFERED=1
    ports:
      - 5009:5009
  
  core_viewall:
    container_name: core_viewall
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-view-all-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
      - PYTHONUNBUFFERED=1
    ports:
      - 5010:5010
  
  core_prefix:
    container_name: core_prefix
    build:
      context: ./services/backend/core
      dockerfile: Dockerfile-prefix-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=<DB_URI>
    ports:
      - 5011:5011

  web:
    container_name: web
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    networks:
      - tracktrace_test_network
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    # volumes:
    # # https://stackoverflow.com/questions/30043872/docker-compose-node-modules-not-present-in-a-volume-after-npm-install-succeeds
    #   - web-app-mount:/app/app
    #   - web-app-node-modules-mount:/app/app/node_modules
    depends_on:
      - core_users

  scraper_ymlu:
    container_name: scraper_ymlu
    build:
      context: ./services/backend/scrapers
      dockerfile: Dockerfile-Ymlu-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8080:8080

  scraper_good:
    container_name: scraper_good
    build:
      context: ./services/backend/scrapers
      dockerfile: Dockerfile-Goodrich-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8081:8081
  


  scraper_kmtc:
    container_name: scraper_kmtc
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: Dockerfile-Kmtc-dev
    shm_size: '1gb'
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8082:8082
  
  scraper_one:
    container_name: scraper_one
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: Dockerfile-One-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    shm_size: '1gb'
    ports:
      - 8083:8083
  
  # scraper_cosc:
  #   container_name: scraper_cosc
  #   build:
  #     context: ./services/backend/scrapers
  #     shm_size: '1gb'
  #     dockerfile: Dockerfile-Cosco-dev
  #   networks:
  #     - tracktrace_test_network
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #   shm_size: '1gb'
  #   ports:
  #     - 8085:8085
  
  # scraper_cord:
  #   container_name: scraper_cord
  #   build:
  #     context: ./services/backend/scrapers
  #     shm_size: '1gb'
  #     dockerfile: Dockerfile-Cord-dev
  #   networks:
  #     - tracktrace_test_network
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - cordUsername =${cordUsername}
  #     - cordPassword =${cordPassword}
  #   shm_size: '1gb'
  #   ports:
  #     - 8084:8084



