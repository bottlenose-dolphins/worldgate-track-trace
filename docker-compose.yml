version: "3.8"

networks:
    tracktrace_test_network:
        driver: bridge

services:

#   ___  __  ____  ____    ____  ____  ____  _  _  __  ___  ____  ____ 
#  / __)/  \(  _ \(  __)  / ___)(  __)(  _ \/ )( \(  )/ __)(  __)/ ___)
# ( (__(  O ))   / ) _)   \___ \ ) _)  )   /\ \/ / )(( (__  ) _) \___ \
#  \___)\__/(__\_)(____)  (____/(____)(__\_) \__/ (__)\___)(____)(____/
  
  core_users:
    container_name: core_users
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-user-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5002:5002
  
  core_import:
    container_name: core_import
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-import-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5003:5003
  
  core_import_cont:
    container_name: core_import_cont
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-import-cont-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5004:5004
  
  core_import_shipment:
    container_name: core_import_shipment
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-import-shipment-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5005:5005

  core_export:
    container_name: core_export
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-export-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5006:5006

  core_export_cont:
    container_name: core_export_cont
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-export-cont-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5007:5007
  
  core_export_shipment:
    container_name: core_export_shipment
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-export-shipment-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
      # - PYTHONUNBUFFERED=1
    ports:
      - 5008:5008
  
  core_complex_scraper:
    container_name: core_complex_scraper
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-complex-scraper-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
      # - PYTHONUNBUFFERED=1
    ports:
      - 5009:5009
  
  core_view_all:
    container_name: core_view_all
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-view-all-dev
    networks:
      - tracktrace_test_network
    environment:
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
      # - PYTHONUNBUFFERED=1
    ports:
      - 5010:5010
  
  core_prefix:
    container_name: core_prefix
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-prefix-dev
    networks:
      - tracktrace_test_network
    environment:
      # - PYTHONUNBUFFERED=1
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5011:5011

  core_vendor_mast:
    container_name: core_vendor_mast
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-vendor-mast-dev
    networks:
      - tracktrace_test_network
    environment:
      # - PYTHONUNBUFFERED=1
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5012:5012

  core_unloading_status:
    container_name: core_unloading_status
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-unloading-status-dev
    networks:
      - tracktrace_test_network
    environment:
      # - PYTHONUNBUFFERED=1
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5013:5013

  core_load_bl_doc:
    container_name: core_load_bl_doc
    build:
      context: ./services/backend/core
      dockerfile: dockerfiles/Dockerfile-load-bl-doc-dev
    networks:
      - tracktrace_test_network
    environment:
      # - PYTHONUNBUFFERED=1
      - SQLALCHEMY_DATABASE_URI=${DB_URI}
    ports:
      - 5014:5014

#  ____  ____   __   __ _  ____  ____  __ _  ____ 
# (  __)(  _ \ /  \ (  ( \(_  _)(  __)(  ( \(    \
#  ) _)  )   /(  O )/    /  )(   ) _) /    / ) D (
# (__)  (__\_) \__/ \_)__) (__) (____)\_)__)(____   

  web:
    container_name: web
    build:
      context: ./services/frontend
      dockerfile: dockerfiles/Dockerfile-dev
      args:
        - NODE_ENV=development
    networks:
      - tracktrace_test_network
    environment:
        - REACT_APP_API_ENDPOINT=${REACT_APP_API_ENDPOINT}
    ports:
      - 80:80
    stdin_open: true
    tty: true
    # volumes:
    # # https://stackoverflow.com/questions/30043872/docker-compose-node-modules-not-present-in-a-volume-after-npm-install-succeeds
    #   - web-app-mount:/app/app
    #   - web-app-node-modules-mount:/app/app/node_modules
    depends_on:
      - core_users


#  ____   ___  ____   __   ____  ____  ____    ____  ____  ____  _  _  __  ___  ____  ____ 
# / ___) / __)(  _ \ / _\ (  _ \(  __)(  _ \  / ___)(  __)(  _ \/ )( \(  )/ __)(  __)/ ___)
# \___ \( (__  )   //    \ ) __/ ) _)  )   /  \___ \ ) _)  )   /\ \/ / )(( (__  ) _) \___ \
# (____/ \___)(__\_)\_/\_/(__)  (____)(__\_)  (____/(____)(__\_) \__/ (__)\___)(____)(____/   

  scraper_ymlu:
    container_name: scraper_ymlu
    build:
      context: ./services/backend/scrapers
      dockerfile: dockerfiles/Dockerfile-Ymlu-dev
      shm_size: '300mb'
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    shm_size: '300mb'
    ports:
      - 8080:8080

  scraper_good:
    container_name: scraper_good
    build:
      context: ./services/backend/scrapers
      dockerfile: dockerfiles/Dockerfile-Good-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
      - goodUsername=${goodUsername}
      - goodPassword=${goodPassword}
    ports:
      - 8081:8081

  scraper_kmtc:
    container_name: scraper_kmtc
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: dockerfiles/Dockerfile-Kmtc-dev
    shm_size: '1gb'
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8082:8082
  
  scraper_one:
    container_name: scraper_one
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: dockerfiles/Dockerfile-One-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    shm_size: '1gb'
    ports:
      - 8083:8083

  scraper_cosc:
    container_name: scraper_cosc
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: dockerfiles/Dockerfile-Cosco-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    shm_size: '1gb'
    ports:
      - 8085:8085

  scraper_cord:
    container_name: scraper_cord
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: dockerfiles/Dockerfile-Cord-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
      - cordUsername=${cordUsername}
      - cordPassword=${cordPassword}
    shm_size: '1gb'
    ports:
      - 8084:8084
  
  scraper_maersk:
    container_name: scraper_maersk
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: Dockerfile-Maersk-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    shm_size: '1gb'
    ports:
      - 8086:8086
  
  scraper_sinokor:
    container_name: scraper_sinokor
    build:
      context: ./services/backend/scrapers
      shm_size: '1gb'
      dockerfile: Dockerfile-Sinokor-dev
    networks:
      - tracktrace_test_network
    environment:
      - PYTHONUNBUFFERED=1
    shm_size: '1gb'
    ports:
      - 8087:8087

